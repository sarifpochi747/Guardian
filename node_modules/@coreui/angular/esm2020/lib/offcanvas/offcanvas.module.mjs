import { NgModule } from '@angular/core';
import { OffcanvasComponent } from './offcanvas/offcanvas.component';
import { OffcanvasBodyComponent } from './offcanvas-body/offcanvas-body.component';
import { OffcanvasHeaderComponent } from './offcanvas-header/offcanvas-header.component';
import { OffcanvasTitleDirective } from './offcanvas-title/offcanvas-title.directive';
import { OffcanvasToggleDirective } from './offcanvas-toggle/offcanvas-toggle.directive';
import { OffcanvasService } from './offcanvas.service';
import { BackdropService } from '../backdrop/backdrop.service';
import * as i0 from "@angular/core";
export class OffcanvasModule {
}
OffcanvasModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.8", ngImport: i0, type: OffcanvasModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
OffcanvasModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "15.2.8", ngImport: i0, type: OffcanvasModule, imports: [OffcanvasBodyComponent,
        OffcanvasComponent,
        OffcanvasHeaderComponent,
        OffcanvasTitleDirective,
        OffcanvasToggleDirective], exports: [OffcanvasBodyComponent,
        OffcanvasComponent,
        OffcanvasHeaderComponent,
        OffcanvasTitleDirective,
        OffcanvasToggleDirective] });
OffcanvasModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "15.2.8", ngImport: i0, type: OffcanvasModule, providers: [
        OffcanvasService,
        BackdropService
    ], imports: [OffcanvasBodyComponent,
        OffcanvasComponent,
        OffcanvasHeaderComponent] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.8", ngImport: i0, type: OffcanvasModule, decorators: [{
            type: NgModule,
            args: [{
                    exports: [
                        OffcanvasBodyComponent,
                        OffcanvasComponent,
                        OffcanvasHeaderComponent,
                        OffcanvasTitleDirective,
                        OffcanvasToggleDirective
                    ],
                    imports: [
                        OffcanvasBodyComponent,
                        OffcanvasComponent,
                        OffcanvasHeaderComponent,
                        OffcanvasTitleDirective,
                        OffcanvasToggleDirective
                    ],
                    providers: [
                        OffcanvasService,
                        BackdropService
                    ]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib2ZmY2FudmFzLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2NvcmV1aS1hbmd1bGFyL3NyYy9saWIvb2ZmY2FudmFzL29mZmNhbnZhcy5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUV6QyxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUNyRSxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSwyQ0FBMkMsQ0FBQztBQUNuRixPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSwrQ0FBK0MsQ0FBQztBQUN6RixPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSw2Q0FBNkMsQ0FBQztBQUN0RixPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSwrQ0FBK0MsQ0FBQztBQUN6RixPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sOEJBQThCLENBQUM7O0FBc0IvRCxNQUFNLE9BQU8sZUFBZTs7NEdBQWYsZUFBZTs2R0FBZixlQUFlLFlBWHhCLHNCQUFzQjtRQUN0QixrQkFBa0I7UUFDbEIsd0JBQXdCO1FBQ3hCLHVCQUF1QjtRQUN2Qix3QkFBd0IsYUFYeEIsc0JBQXNCO1FBQ3RCLGtCQUFrQjtRQUNsQix3QkFBd0I7UUFDeEIsdUJBQXVCO1FBQ3ZCLHdCQUF3Qjs2R0FjZixlQUFlLGFBTGY7UUFDVCxnQkFBZ0I7UUFDaEIsZUFBZTtLQUNoQixZQVRDLHNCQUFzQjtRQUN0QixrQkFBa0I7UUFDbEIsd0JBQXdCOzJGQVNmLGVBQWU7a0JBcEIzQixRQUFRO21CQUFDO29CQUNSLE9BQU8sRUFBRTt3QkFDUCxzQkFBc0I7d0JBQ3RCLGtCQUFrQjt3QkFDbEIsd0JBQXdCO3dCQUN4Qix1QkFBdUI7d0JBQ3ZCLHdCQUF3QjtxQkFDekI7b0JBQ0QsT0FBTyxFQUFFO3dCQUNQLHNCQUFzQjt3QkFDdEIsa0JBQWtCO3dCQUNsQix3QkFBd0I7d0JBQ3hCLHVCQUF1Qjt3QkFDdkIsd0JBQXdCO3FCQUN6QjtvQkFDRCxTQUFTLEVBQUU7d0JBQ1QsZ0JBQWdCO3dCQUNoQixlQUFlO3FCQUNoQjtpQkFDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IE9mZmNhbnZhc0NvbXBvbmVudCB9IGZyb20gJy4vb2ZmY2FudmFzL29mZmNhbnZhcy5jb21wb25lbnQnO1xuaW1wb3J0IHsgT2ZmY2FudmFzQm9keUNvbXBvbmVudCB9IGZyb20gJy4vb2ZmY2FudmFzLWJvZHkvb2ZmY2FudmFzLWJvZHkuY29tcG9uZW50JztcbmltcG9ydCB7IE9mZmNhbnZhc0hlYWRlckNvbXBvbmVudCB9IGZyb20gJy4vb2ZmY2FudmFzLWhlYWRlci9vZmZjYW52YXMtaGVhZGVyLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBPZmZjYW52YXNUaXRsZURpcmVjdGl2ZSB9IGZyb20gJy4vb2ZmY2FudmFzLXRpdGxlL29mZmNhbnZhcy10aXRsZS5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgT2ZmY2FudmFzVG9nZ2xlRGlyZWN0aXZlIH0gZnJvbSAnLi9vZmZjYW52YXMtdG9nZ2xlL29mZmNhbnZhcy10b2dnbGUuZGlyZWN0aXZlJztcbmltcG9ydCB7IE9mZmNhbnZhc1NlcnZpY2UgfSBmcm9tICcuL29mZmNhbnZhcy5zZXJ2aWNlJztcbmltcG9ydCB7IEJhY2tkcm9wU2VydmljZSB9IGZyb20gJy4uL2JhY2tkcm9wL2JhY2tkcm9wLnNlcnZpY2UnO1xuXG5ATmdNb2R1bGUoe1xuICBleHBvcnRzOiBbXG4gICAgT2ZmY2FudmFzQm9keUNvbXBvbmVudCxcbiAgICBPZmZjYW52YXNDb21wb25lbnQsXG4gICAgT2ZmY2FudmFzSGVhZGVyQ29tcG9uZW50LFxuICAgIE9mZmNhbnZhc1RpdGxlRGlyZWN0aXZlLFxuICAgIE9mZmNhbnZhc1RvZ2dsZURpcmVjdGl2ZVxuICBdLFxuICBpbXBvcnRzOiBbXG4gICAgT2ZmY2FudmFzQm9keUNvbXBvbmVudCxcbiAgICBPZmZjYW52YXNDb21wb25lbnQsXG4gICAgT2ZmY2FudmFzSGVhZGVyQ29tcG9uZW50LFxuICAgIE9mZmNhbnZhc1RpdGxlRGlyZWN0aXZlLFxuICAgIE9mZmNhbnZhc1RvZ2dsZURpcmVjdGl2ZVxuICBdLFxuICBwcm92aWRlcnM6IFtcbiAgICBPZmZjYW52YXNTZXJ2aWNlLFxuICAgIEJhY2tkcm9wU2VydmljZVxuICBdXG59KVxuZXhwb3J0IGNsYXNzIE9mZmNhbnZhc01vZHVsZSB7fVxuIl19