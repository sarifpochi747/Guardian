{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nlet ProfileComponent = class ProfileComponent {\n  constructor(http, sanitizer) {\n    this.http = http;\n    this.sanitizer = sanitizer;\n    this.heroes = [];\n    this.files = [];\n    this.showPrev = [];\n    this.imgFiles = [];\n    this.imgNames = [];\n    this.vidFiles = [];\n  }\n  ngOnInit() {\n    this.http.get('http://localhost:5000/addProfiles').subscribe(response => {\n      this.heroes = response;\n      for (let i = 1; i <= 7; i++) {\n        const fieldname = `img${i}`;\n        this.imtemp = this.heroes[0][fieldname];\n        this.files[i - 1] = this.imtemp;\n      }\n    });\n    // this.http.get<any[]>('http://localhost:5000/getImages')\n    // .subscribe(response => {\n    //   this.imgFiles = response\n    //   console.log(this.imgFiles);\n    // })\n  }\n\n  onSelectNew(event) {\n    const inputElement = event.target;\n    const files = inputElement.files;\n    if (files && files.length > 0) {\n      if (files[0].type === 'video/mp4') {\n        const file = files[0];\n        this.imgNames.push(file.name);\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = () => {\n          const base64String = reader.result;\n          this.vidFiles.push({\n            \"video\": base64String\n          });\n          console.log(this.vidFiles);\n        };\n      }\n      if (files[0].size > 5000000 && files[0].type.startsWith('image/')) {\n        alert(\"File must not large than 5MB. size of this file is: \" + files[0].size + \"bytes\");\n      } else if (files[0].type === 'image/png' || files[0].type === 'image/jpeg') {\n        const file = files[0];\n        this.imgNames.push(file.name);\n        // Convert the selected file to base64\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = () => {\n          const base64String = reader.result;\n          this.imgFiles.push({\n            \"img\": base64String\n          });\n          console.log(this.imgFiles);\n        };\n      }\n      ;\n    }\n  }\n  onSelect(event, id) {\n    const file = event.addedFiles[0];\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => {\n      const base64String = reader.result;\n      this.files.splice(id, 1, base64String);\n    };\n    this.showPrev.splice(id, 1, ...event.addedFiles);\n    console.log(this.showPrev);\n  }\n  onRemove(event, id) {\n    this.files.splice(id, 1, null);\n    this.showPrev.splice(id, 1, null);\n  }\n  updateForm() {\n    if (this.heroes[0].title == \"\" || this.heroes[0].descript == \"\") {\n      alert('Please Type something to your title and description');\n    } else {\n      for (let i = 0; i < 7; i++) {\n        const r = `img${i + 1}`;\n        this.heroes[0][r] = this.files[i];\n      }\n      this.http.put('http://localhost:5000/UpdateAddProfiles', this.heroes[0]).subscribe(response => {\n        console.log('Form updated successfully:', response);\n      });\n      for (let i = 0; i < this.imgFiles.length; i++) {\n        this.http.post('http://localhost:5000/createAllAddImages', this.imgFiles[i]).subscribe(response => {\n          console.log('Form updated successfully:', response);\n        });\n      }\n      for (let i = 0; i < this.vidFiles.length; i++) {\n        this.http.post('http://localhost:5000/createAllAddVideos', this.vidFiles[i]).subscribe(response => {\n          console.log('Form updated successfully:', response);\n        });\n      }\n      window.location.reload();\n    }\n  }\n  Bold() {\n    const currentValue = this.myTextarea.nativeElement.value;\n    const selectionStart = this.myTextarea.nativeElement.selectionStart;\n    const selectionEnd = this.myTextarea.nativeElement.selectionEnd;\n    const modifiedText = \"<b><strong>\" + currentValue.substring(selectionStart, selectionEnd) + \"</strong></b>\";\n    const newText = currentValue.substring(0, selectionStart) + modifiedText + currentValue.substring(selectionEnd);\n    this.heroes[0].descript = newText;\n  }\n  Italic() {\n    const currentValue = this.myTextarea.nativeElement.value;\n    const selectionStart = this.myTextarea.nativeElement.selectionStart;\n    const selectionEnd = this.myTextarea.nativeElement.selectionEnd;\n    const modifiedText = \"<i>\" + currentValue.substring(selectionStart, selectionEnd) + \"</i>\";\n    const newText = currentValue.substring(0, selectionStart) + modifiedText + currentValue.substring(selectionEnd);\n    this.heroes[0].descript = newText;\n  }\n  Underline() {\n    const currentValue = this.myTextarea.nativeElement.value;\n    const selectionStart = this.myTextarea.nativeElement.selectionStart;\n    const selectionEnd = this.myTextarea.nativeElement.selectionEnd;\n    const modifiedText = \"<u>\" + currentValue.substring(selectionStart, selectionEnd) + \"</u>\";\n    const newText = currentValue.substring(0, selectionStart) + modifiedText + currentValue.substring(selectionEnd);\n    this.heroes[0].descript = newText;\n  }\n  Strike() {\n    const currentValue = this.myTextarea.nativeElement.value;\n    const selectionStart = this.myTextarea.nativeElement.selectionStart;\n    const selectionEnd = this.myTextarea.nativeElement.selectionEnd;\n    const modifiedText = \"<strike>\" + currentValue.substring(selectionStart, selectionEnd) + \"</strike>\";\n    const newText = currentValue.substring(0, selectionStart) + modifiedText + currentValue.substring(selectionEnd);\n    this.heroes[0].descript = newText;\n  }\n};\n__decorate([ViewChild('myTextarea')], ProfileComponent.prototype, \"myTextarea\", void 0);\nProfileComponent = __decorate([Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})], ProfileComponent);\nexport { ProfileComponent };","map":{"version":3,"mappings":"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","names":["Component","ViewChild","ProfileComponent","constructor","http","sanitizer","ngOnInit","get","subscribe","response","heroes","i","fieldname","imtemp","files","onSelectNew","event","inputElement","target","length","type","file","imgNames","push","name","reader","FileReader","readAsDataURL","onload","base64String","result","vidFiles","console","log","size","startsWith","alert","imgFiles","onSelect","id","addedFiles","splice","showPrev","onRemove","updateForm","title","descript","r","put","post","window","location","reload","Bold","currentValue","myTextarea","nativeElement","value","selectionStart","selectionEnd","modifiedText","substring","newText","Italic","Underline","Strike","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\sarif\\Desktop\\guardian\\src\\app\\menu_page\\profile\\profile.component.ts"],"sourcesContent":["import { Component, OnInit,ViewChild } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Hero } from 'src/app/hero_type';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { NgxDropzoneModule, NgxDropzoneComponent } from 'ngx-dropzone';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit  {\r\n  heroes: any[] = [];\r\n  imtemp:any;\r\n  tmpTitle:any;\r\n  tmpDescript:any;\r\n  constructor(private http: HttpClient, private sanitizer: DomSanitizer) { }\r\n  files: any[] = [];\r\n  showPrev: any[] = [];\r\n  imgFiles: any[] = [];\r\n  imgNames: any[] = [];\r\n  vidFiles: any[] = [];\r\n\r\n  ngOnInit():void {\r\n    this.http.get<any[]>('http://localhost:5000/addProfiles')\r\n    .subscribe(response => {\r\n      this.heroes = response;\r\n        for(let i=1; i<=7;i++){\r\n          const fieldname:any = `img${i}`;\r\n          this.imtemp = this.heroes[0][fieldname];\r\n          this.files[i-1] = this.imtemp;\r\n        }\r\n    })\r\n\r\n    // this.http.get<any[]>('http://localhost:5000/getImages')\r\n    // .subscribe(response => {\r\n    //   this.imgFiles = response\r\n    //   console.log(this.imgFiles);\r\n    // })\r\n  }\r\n\r\n  onSelectNew(event: Event) {\r\n    const inputElement = event.target as HTMLInputElement;\r\n    const files = inputElement.files;\r\n\r\n    if (files && files.length > 0) {\r\n      if(files[0].type === 'video/mp4') {\r\n        const file = files[0];\r\n        this.imgNames.push(file.name);\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => {\r\n          const base64String = reader.result as string;\r\n          this.vidFiles.push({\"video\":base64String})\r\n          console.log(this.vidFiles);\r\n        }\r\n      }\r\n      if(files[0].size > 5000000 && files[0].type.startsWith('image/')){\r\n        alert(\"File must not large than 5MB. size of this file is: \" + files[0].size + \"bytes\")\r\n      }\r\n      else if(files[0].type === 'image/png' || files[0].type === 'image/jpeg'){\r\n        const file = files[0];\r\n        this.imgNames.push(file.name);\r\n        // Convert the selected file to base64\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => {\r\n        const base64String = reader.result as string;\r\n        this.imgFiles.push({\"img\":base64String})\r\n        console.log(this.imgFiles);\r\n      }\r\n      };\r\n    }\r\n  }\r\n\r\n\tonSelect(event: any,id:any) {\r\n    const file = event.addedFiles[0];\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => {\r\n      const base64String = reader.result as string;\r\n      this.files.splice(id,1,base64String);\r\n    };\r\n\r\n\r\n    this.showPrev.splice(id,1,...event.addedFiles);\r\n    console.log(this.showPrev);\r\n  }\r\n\r\n\tonRemove(event:any,id:any) {\r\n\t\tthis.files.splice(id, 1,null);\r\n    this.showPrev.splice(id, 1,null);\r\n\t}\r\n\r\n  updateForm() {\r\n    if(this.heroes[0].title == \"\" || this.heroes[0].descript == \"\"){\r\n      alert('Please Type something to your title and description');\r\n    }\r\n    else{\r\n      for(let i=0; i<7; i++){\r\n        const r = `img${i+1}`;\r\n        this.heroes[0][r] = this.files[i];\r\n      }\r\n\r\n      this.http.put('http://localhost:5000/UpdateAddProfiles', this.heroes[0])\r\n        .subscribe((response) => {\r\n          console.log('Form updated successfully:', response);\r\n      });\r\n\r\n      for(let i = 0; i < this.imgFiles.length; i++){\r\n        this.http.post('http://localhost:5000/createAllAddImages', this.imgFiles[i])\r\n          .subscribe((response) => {\r\n            console.log('Form updated successfully:', response);\r\n        });\r\n      }\r\n\r\n      for(let i = 0; i < this.vidFiles.length; i++){\r\n        this.http.post('http://localhost:5000/createAllAddVideos', this.vidFiles[i])\r\n          .subscribe((response) => {\r\n            console.log('Form updated successfully:', response);\r\n        });\r\n      }\r\n\r\n      window.location.reload();\r\n    }\r\n  }\r\n\r\n  @ViewChild('myTextarea') myTextarea: any;\r\n  Bold() {\r\n    const currentValue = this.myTextarea.nativeElement.value;\r\n    const selectionStart = this.myTextarea.nativeElement.selectionStart;\r\n    const selectionEnd = this.myTextarea.nativeElement.selectionEnd;\r\n\r\n    const modifiedText = \"<b><strong>\"+currentValue.substring(selectionStart,selectionEnd)+\"</strong></b>\";\r\n    const newText = currentValue.substring(0, selectionStart) + modifiedText + currentValue.substring(selectionEnd);\r\n    this.heroes[0].descript = newText;\r\n  }\r\n  Italic() {\r\n    const currentValue = this.myTextarea.nativeElement.value;\r\n    const selectionStart = this.myTextarea.nativeElement.selectionStart;\r\n    const selectionEnd = this.myTextarea.nativeElement.selectionEnd;\r\n\r\n    const modifiedText = \"<i>\"+currentValue.substring(selectionStart,selectionEnd)+\"</i>\";\r\n    const newText = currentValue.substring(0, selectionStart) + modifiedText + currentValue.substring(selectionEnd);\r\n    this.heroes[0].descript = newText;\r\n  }\r\n  Underline() {\r\n    const currentValue = this.myTextarea.nativeElement.value;\r\n    const selectionStart = this.myTextarea.nativeElement.selectionStart;\r\n    const selectionEnd = this.myTextarea.nativeElement.selectionEnd;\r\n\r\n    const modifiedText = \"<u>\"+currentValue.substring(selectionStart,selectionEnd)+\"</u>\";\r\n    const newText = currentValue.substring(0, selectionStart) + modifiedText + currentValue.substring(selectionEnd);\r\n    this.heroes[0].descript = newText;\r\n  }\r\n  Strike() {\r\n    const currentValue = this.myTextarea.nativeElement.value;\r\n    const selectionStart = this.myTextarea.nativeElement.selectionStart;\r\n    const selectionEnd = this.myTextarea.nativeElement.selectionEnd;\r\n\r\n    const modifiedText = \"<strike>\"+currentValue.substring(selectionStart,selectionEnd)+\"</strike>\";\r\n    const newText = currentValue.substring(0, selectionStart) + modifiedText + currentValue.substring(selectionEnd);\r\n    this.heroes[0].descript = newText;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}