{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet OurCustomerComponent = class OurCustomerComponent {\n  constructor(http, sanitizer) {\n    this.http = http;\n    this.sanitizer = sanitizer;\n    this.title = \"\";\n    //form user submit\n    this.data = {\n      userIcon: \"\",\n      name: \"\",\n      brandManager: \"\",\n      comment: \"\",\n      status: true\n    };\n    this.n = [0];\n    this.files = [];\n    this.showPrev = [];\n  }\n  addElement() {\n    //add to n\n    this.n.push(this.n.length);\n  }\n  onSelect(event, id) {\n    const file = event.addedFiles[0];\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => {\n      const base64String = reader.result;\n      this.files.splice(id, 1, base64String);\n    };\n    this.showPrev.splice(id, 1, ...event.addedFiles);\n  }\n  onRemove(event, id) {\n    this.files.splice(id, 1, null);\n    this.showPrev.splice(id, 1, null);\n    console.log(this.showPrev);\n  }\n  updateForm() {\n    if (this.data.name.length > 0 && this.data.comment.length > 0 && this.data.brandManager.length > 0 && this.files[0] != null) {\n      this.data.userIcon = this.files[0];\n      console.log(this.data);\n      this.http.post('http://localhost:5000/CreateComment', this.data).subscribe(response => {\n        console.log('Form updated successfully:', response);\n      });\n      window.location.reload();\n    } else {\n      alert(\"input something\");\n    }\n  }\n};\nOurCustomerComponent = __decorate([Component({\n  selector: 'app-our-customer',\n  templateUrl: './our-customer.component.html',\n  styleUrls: ['./our-customer.component.css']\n})], OurCustomerComponent);\nexport { OurCustomerComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAe,eAAe;AAOzC,IAAMC,oBAAoB,GAA1B,MAAMA,oBAAoB;EAE/BC,YAAoBC,IAAgB,EAAUC,SAAuB;IAAjD,SAAI,GAAJD,IAAI;IAAsB,cAAS,GAATC,SAAS;IACvD,UAAK,GAAU,EAAE;IACjB;IACA,SAAI,GAAQ;MACVC,QAAQ,EAAE,EAAE;MACZC,IAAI,EAAE,EAAE;MACRC,YAAY,EAAE,EAAE;MAChBC,OAAO,EAAE,EAAE;MACXC,MAAM,EAAE;KACT;IAED,MAAC,GAAa,CAAC,CAAC,CAAC;IACjB,UAAK,GAAU,EAAE;IACjB,aAAQ,GAAU,EAAE;EAbqD;EAgBzEC,UAAU;IACR;IACA,IAAI,CAACC,CAAC,CAACC,IAAI,CAAC,IAAI,CAACD,CAAC,CAACE,MAAM,CAAC;EAC5B;EACAC,QAAQ,CAACC,KAAU,EAACC,EAAM;IACxB,MAAMC,IAAI,GAAGF,KAAK,CAACG,UAAU,CAAC,CAAC,CAAC;IAChC,MAAMC,MAAM,GAAG,IAAIC,UAAU,EAAE;IAC/BD,MAAM,CAACE,aAAa,CAACJ,IAAI,CAAC;IAC1BE,MAAM,CAACG,MAAM,GAAG,MAAK;MACnB,MAAMC,YAAY,GAAGJ,MAAM,CAACK,MAAgB;MAC5C,IAAI,CAACC,KAAK,CAACC,MAAM,CAACV,EAAE,EAAC,CAAC,EAACO,YAAY,CAAC;IACtC,CAAC;IAED,IAAI,CAACI,QAAQ,CAACD,MAAM,CAACV,EAAE,EAAC,CAAC,EAAC,GAAGD,KAAK,CAACG,UAAU,CAAC;EAChD;EAEAU,QAAQ,CAACb,KAAS,EAACC,EAAM;IACzB,IAAI,CAACS,KAAK,CAACC,MAAM,CAACV,EAAE,EAAE,CAAC,EAAC,IAAI,CAAC;IAC3B,IAAI,CAACW,QAAQ,CAACD,MAAM,CAACV,EAAE,EAAE,CAAC,EAAC,IAAI,CAAC;IAChCa,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,QAAQ,CAAC;EAC7B;EAECI,UAAU;IACR,IAAG,IAAI,CAACC,IAAI,CAAC1B,IAAI,CAACO,MAAM,GAAG,CAAC,IAAI,IAAI,CAACmB,IAAI,CAACxB,OAAO,CAACK,MAAM,GAAG,CAAC,IAAI,IAAI,CAACmB,IAAI,CAACzB,YAAY,CAACM,MAAM,GAAG,CAAC,IAAK,IAAI,CAACY,KAAK,CAAC,CAAC,CAAC,IAAI,IAAI,EAC3H;MACE,IAAI,CAACO,IAAI,CAAC3B,QAAQ,GAAG,IAAI,CAACoB,KAAK,CAAC,CAAC,CAAC;MAClCI,OAAO,CAACC,GAAG,CAAC,IAAI,CAACE,IAAI,CAAC;MACtB,IAAI,CAAC7B,IAAI,CAAC8B,IAAI,CAAC,qCAAqC,EAAC,IAAI,CAACD,IAAI,CAAE,CAC7DE,SAAS,CAAEC,QAAQ,IAAI;QACtBN,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEK,QAAQ,CAAC;MACvD,CAAC,CAAC;MACFC,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;KACzB,MAED;MACEC,KAAK,CAAC,iBAAiB,CAAC;;EAG5B;CAKD;AA7DYtC,oBAAoB,eALhCD,SAAS,CAAC;EACTwC,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,GACWzC,oBAAoB,CA6DhC;SA7DYA,oBAAoB","names":["Component","OurCustomerComponent","constructor","http","sanitizer","userIcon","name","brandManager","comment","status","addElement","n","push","length","onSelect","event","id","file","addedFiles","reader","FileReader","readAsDataURL","onload","base64String","result","files","splice","showPrev","onRemove","console","log","updateForm","data","post","subscribe","response","window","location","reload","alert","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\sarif\\Desktop\\guardian\\src\\app\\menu_page\\our-customer\\our-customer.component.ts"],"sourcesContent":["import { Component,OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-our-customer',\n  templateUrl: './our-customer.component.html',\n  styleUrls: ['./our-customer.component.css']\n})\nexport class OurCustomerComponent {\n\n  constructor(private http: HttpClient, private sanitizer: DomSanitizer) { }\n  title:string = \"\";\n  //form user submit\n  data: any = {\n    userIcon: \"\",\n    name: \"\",\n    brandManager: \"\",\n    comment: \"\",\n    status: true,\n  };\n\n  n: number[] = [0];\n  files: any[] = [];\n  showPrev: any[] = [];\n\n\n  addElement():void{\n    //add to n\n    this.n.push(this.n.length);\n  }\n  onSelect(event: any,id:any) {\n    const file = event.addedFiles[0];\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => {\n      const base64String = reader.result as string;\n      this.files.splice(id,1,base64String);\n    };\n\n    this.showPrev.splice(id,1,...event.addedFiles);\n  }\n\n  onRemove(event:any,id:any) {\n\t\tthis.files.splice(id, 1,null);\n    this.showPrev.splice(id, 1,null);\n    console.log(this.showPrev)\n\t}\n\n  updateForm() {\n    if(this.data.name.length > 0 && this.data.comment.length > 0 && this.data.brandManager.length > 0 &&  this.files[0] != null)\n    {\n      this.data.userIcon = this.files[0];\n      console.log(this.data)\n      this.http.post('http://localhost:5000/CreateComment',this.data )\n        .subscribe((response) => {\n          console.log('Form updated successfully:', response);\n      });\n      window.location.reload();\n    }\n    else\n    {\n      alert(\"input something\")\n    }\n\n  }\n\n\n\n\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}