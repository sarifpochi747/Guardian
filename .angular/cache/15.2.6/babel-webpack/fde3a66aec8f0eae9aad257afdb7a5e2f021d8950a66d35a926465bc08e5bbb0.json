{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./../shared/auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard2 {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate(next, state) {\n    if (this.authService.isLoggedIn === true) {\n      this.router.navigate(['/menu']);\n    }\n    return true;\n  }\n}\nAuthGuard2.ɵfac = function AuthGuard2_Factory(t) {\n  return new (t || AuthGuard2)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n};\nAuthGuard2.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard2,\n  factory: AuthGuard2.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AAOA,OAAM,MAAOA,UAAU;EACrBC,YACSC,WAAwB,EACxBC,MAAc;IADd,gBAAW,GAAXD,WAAW;IACX,WAAM,GAANC,MAAM;EACX;EACJC,WAAW,CACTC,IAA4B,EAC5BC,KAA0B;IAC1B,IAAI,IAAI,CAACJ,WAAW,CAACK,UAAU,KAAK,IAAI,EAAE;MACxC,IAAI,CAACJ,MAAM,CAACK,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;;IAEjC,OAAO,IAAI;EACb;;AAZWR,UAAU;mBAAVA,UAAU;AAAA;AAAVA,UAAU;SAAVA,UAAU;EAAAS,SAAVT,UAAU;EAAAU,YAFT;AAAM","names":["AuthGuard2","constructor","authService","router","canActivate","next","state","isLoggedIn","navigate","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\sarif\\Desktop\\guardian\\src\\app\\shared\\auth.guard2.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, RouterStateSnapshot,UrlTree, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from './../shared/auth.service';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard2 {\r\n  constructor(\r\n    public authService: AuthService,\r\n    public router: Router\r\n  ) { }\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n    if (this.authService.isLoggedIn === true) {\r\n      this.router.navigate(['/menu'])\r\n    }\r\n    return true;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}